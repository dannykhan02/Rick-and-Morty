document.addEventListener('DOMContentLoaded', function() {
    // Fetch character data from a local API endpoint
    fetch('http://localhost:3000/characters')
        // Convert the response to JSON format
        .then(response => {
            // Check if the response status is OK
            if (response.ok) {
                // If the response is OK, parse the JSON data
                return response.json();
            } else {
                // If the response is not OK, throw an error
                throw new Error('Failed to fetch character data');
            }
        })
        .then(data => {
            // Check if the data contains an array of characters
            if (data && Array.isArray(data.characters)) {
                // Extract the array of characters
                const characters = data.characters;

                // Display the characters on the webpage
                displayCharacters(characters);

                // Listen for changes on the dark mode toggle button
                const darkModeToggle = document.getElementById('darkModeToggle');
                if (darkModeToggle) {
                    darkModeToggle.addEventListener('change', function(event) {
                        // Toggle the dark mode class on the body element
                        document.body.classList.toggle('dark-mode');
                    });
                } else {
                    console.error('Error: darkModeToggle element not found');
                }

                // Listen for mouseover events on character images
                const characterImages = document.querySelectorAll('.character img');
                characterImages.forEach(image => {
                    image.addEventListener('mouseover', function(event) {
                        // Increase the opacity of the hovered image
                        event.target.style.opacity = '8';
                    });
                    image.addEventListener('mouseout', function(event) {
                        // Reset the opacity of the hovered image
                        event.target.style.opacity = '1';
                    });
                });

                // Retrieve a character by ID and log it to the console
                const characterById = id => characters.find(character => character.id === id);
                const character1 = characterById(1);
                console.log(character1);
            } else {
                console.error('Error: Invalid characters data');
            }
        })
        .catch(error => {
            // Log any errors that occur during data fetching
            console.error('Error fetching data:', error);
        });

    // Function to display characters on the webpage
    function displayCharacters(characters) {
        // Find the container element where characters will be displayed
        const container = document.querySelector('.container');
        // Clear the container to remove any existing characters
        container.innerHTML = '';

        // Loop through each character in the array
        characters.forEach(character => {
            // Create a card element to display the character information
            const card = document.createElement('div');
            card.classList.add('card');
            card.innerHTML = `
                <img src="${character.image}" alt="${character.name}">
                <h3>${character.name}</h3>
                <p>Status: ${character.status}</p>
                <p>Species: ${character.species}</p>
                <p>Gender: ${character.gender}</p>
            `;
            // Append the card to the container
            container.appendChild(card);
        });
    }
});
